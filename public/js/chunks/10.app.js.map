{"version":3,"sources":["webpack:///./resources/js/src/supports/helper.js","webpack:///./resources/js/src/supports/axios.js","webpack:///./resources/js/src/views/Dashboard/index.js"],"names":["handleError","error","response","Number","status","alert","data","type","icon","title","Swal","fire","timer","text","showConfirmButton","mixin","toast","position","timerProgressBar","onOpen","addEventListener","stopTimer","resumeTimer","baseUrl","document","head","querySelector","content","instance","axios","create","baseURL","Content","Layout","dashboard","props","className","span","onClick","get","then","e","style","marginBottom"],"mappings":"0FAAA,8FAKaA,EAAc,SAAAC,GACzB,IAAIC,EAAWD,EAAMC,SAErB,GAAGC,OAAOD,EAASE,SAAW,KAAOD,OAAOD,EAASE,SAAW,IAAI,CAMlEC,EALc,CACZC,KAAM,6BACNF,OAAQ,MAIX,GAAGD,OAAOD,EAASE,SAAW,IAAI,CAMjCC,EALc,CACZC,KAAM,wBACNF,OAAQ,WAKVC,EAAMH,IAIGG,EAAQ,SAACH,EAAUK,GAC9B,IAAIC,EAAO,GAAIC,EAAQ,IAEpBN,OAAOD,EAASE,SAAW,KAAOD,OAAOD,EAASE,SAAW,KAC5DI,EAAU,UACVC,EAAU,gBACLN,OAAOD,EAASE,SAAW,KAAOD,OAAOD,EAASE,SAAW,KAClEI,EAAU,UACVC,EAAU,aAENN,OAAOD,EAASE,SAAW,KAAOD,OAAOD,EAASE,SAAW,MACjEI,EAAU,QACVC,EAAU,WAGF,UAATF,GACCG,IAAKC,KAAK,CACNH,KAAMA,EACNI,MAAO,IACPH,MAAOA,EACPI,KAAMX,EAASI,KACfQ,mBAAmB,IAGTJ,IAAKK,MAAM,CACrBC,OAAO,EACPC,SAAU,UACVH,mBAAmB,EACnBF,MAAO,IACPM,kBAAkB,EAClBC,OAAQ,SAACH,GACLA,EAAMI,iBAAiB,aAAcV,IAAKW,WAC1CL,EAAMI,iBAAiB,aAAcV,IAAKY,gBAI5CX,KAAK,CACPH,KAAMA,EACNC,MAAOP,EAASI,OAIxB,OAAOJ,EAASE,S,gCCrElB,sBAIImB,EAFcC,SAASC,KAAKC,cAAc,6BAA6BC,QAE5C,OAEzBC,EAAWC,IAAMC,OAAO,CAC1BC,QAASR,IAGEK,O,iCCVf,8GAeQI,EAAYC,IAAZD,QAyCOE,UAvCG,SAAAC,GAcd,OACI,6BACI,kBAAC,IAAD,CAAKC,UAAU,kBACX,kBAAC,IAAD,CAAKC,KAAK,MACN,wBAAID,UAAU,iBAAd,cAEJ,kBAAC,IAAD,CAAKC,KAAK,OAOd,kBAACL,EAAD,KACI,yBAAKI,UAAU,0BAEX,kBAAC,IAAD,CACIA,UAAU,cAAcE,QAAS,WA1BjDT,IAAMU,IAAI,gBACLC,MAAK,SAAAtC,OADV,OAIW,SAAAuC,GACHzC,YAAYyC,OAqB2CC,MAAO,CAACC,aAAc,KADzE","file":"js/chunks/10.app.js","sourcesContent":["import React from 'react';\n\n// third party\nimport Swal from 'sweetalert2';\n\nexport const handleError = error => {\n  let response = error.response;\n\n  if(Number(response.status) >= 500 && Number(response.status) <= 599){\n    let message = {\n      data: 'Maaf, Ada Kesalahan Sistem',\n      status: 500,\n    }\n\n    alert(message);\n  }if(Number(response.status) >= 404){\n    let message = {\n      data: 'Maaf, Tidak Ditemukan',\n      status: 404,\n    }\n\n    alert(message);\n  }else{\n    alert(response);\n  }\n}\n\nexport const alert = (response, type) => {\n  let icon = '', title = '';\n\n  if(Number(response.status) >= 200 && Number(response.status) <= 299){\n      icon    = 'success';\n      title   = 'Notification';\n  }else if(Number(response.status) >= 400 && Number(response.status) <= 499){\n      icon    = 'warning';\n      title   = 'Attention';\n  }\n  else if(Number(response.status) >= 500 && Number(response.status) <= 599){\n      icon    = 'error';\n      title   = 'Warning';\n  }   \n\n  if(type === 'popup'){\n      Swal.fire({\n          icon: icon,\n          timer: 2000,\n          title: title,\n          text: response.data,\n          showConfirmButton: false,\n      });\n  }else{\n      const Toast = Swal.mixin({\n          toast: true,\n          position: 'top-end',\n          showConfirmButton: false,\n          timer: 3000,\n          timerProgressBar: true,\n          onOpen: (toast) => {\n              toast.addEventListener('mouseenter', Swal.stopTimer)\n              toast.addEventListener('mouseleave', Swal.resumeTimer)\n          }\n      });\n\n      Toast.fire({\n          icon: icon,\n          title: response.data,\n      });\n  }\n\n  return response.status;\n}\n\nexport const addClass = (elements, myClass) => {\n    // if there are no elements, we're done\n  if (!elements) { return; }\n\n  // if we have a selector, get the chosen elements\n  if (typeof(elements) === 'string') {\n    elements = document.querySelectorAll(elements);\n  }\n\n  // if we have a single DOM element, make it an array to simplify behavior\n  else if (elements.tagName) { elements=[elements]; }\n\n  // add class to all chosen elements\n  for (var i=0; i<elements.length; i++) {\n\n    // if class is not already found\n    if ( (' '+elements[i].className+' ').indexOf(' '+myClass+' ') < 0 ) {\n\n      // add class\n      elements[i].className += ' ' + myClass;\n    }\n  }\n}","import axios from 'axios';\n\nlet baseDomain  = document.head.querySelector('meta[name=\"api-base-url\"]').content;\n\nlet baseUrl     = baseDomain + '/api';\n\nconst instance = axios.create({\n    baseURL: baseUrl,\n});\n\nexport default instance;","import React from 'react';\n\n// supports\nimport axios from '../../supports/axios';\nimport {alert, handleError} from '../../supports/helper';\n\nimport 'antd/lib/row/style/css';\nimport 'antd/lib/col/style/css';\nimport 'antd/lib/layout/style/css';\nimport 'antd/lib/button/style/css';\nimport 'antd/lib/breadcrumb/style/css';\nimport { \n    Row, Col, Layout, Breadcrumb, Button,\n} from 'antd';\n\nconst { Content } = Layout;\n\nconst dashboard = props => {\n\n    const send = props => {\n        // console.log('terkirim');\n\n        axios.get('notification')\n            .then(response => {\n                // alert(response);\n            })\n            .catch(e => {\n                handleError(e);\n            });\n    }\n\n    return(\n        <div>\n            <Row className=\"header-content\">\n                <Col span=\"20\">\n                    <h1 className=\"title-content\">Dashboard</h1>\n                </Col>\n                <Col span=\"4\">\n                    {/* <Breadcrumb style={{ margin: '16px 0' }}>\n                        <Breadcrumb.Item>User</Breadcrumb.Item>\n                        <Breadcrumb.Item>Table</Breadcrumb.Item>\n                    </Breadcrumb> */}\n                </Col>\n            </Row>\n            <Content>\n                <div className=\"site-layout-background\" >\n                    {/* content */}\n                    <Button \n                        className=\"btn-success\" onClick={() => send()} style={{marginBottom: 20}}\n                    > Send </Button>\n                </div>\n            </Content>\n        </div>\n    )\n}\n\nexport default dashboard;"],"sourceRoot":""}